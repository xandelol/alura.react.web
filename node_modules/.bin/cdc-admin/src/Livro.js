import React, {Component} from 'react';
import $ from 'jquery';
import InputCustomizado from "./components/InputCustomizado";
import PubSub from 'pubsub-js';
import TratadorErros from './components/TratadorErros'

class FormularioLivro extends Component{

    constructor(props){
        super(props);
        this.state = {titulo:'',preco:'',autorId:''};
        this.enviaForm = this.enviaForm.bind(this);
        this.salvaAlteracao = this.salvaAlteracao.bind(this);
    }

    salvaAlteracao(nomeInput, evento){
        this.setState({[nomeInput]:evento.target.value});
    }

    enviaForm(evento){
        evento.preventDefault();

        let titulo = this.state.titulo.trim();
        let preco = this.state.preco.trim();
        let autorId = this.state.autorId;

        $.ajax({
            url:"https://cdc-react.herokuapp.com/api/livros",
            contentType: 'application/json',
            dataType: 'json',
            type:'post',
            data:JSON.stringify({
                titulo: titulo,
                preco: preco,
                autorId: autorId
            }),
            success: function (novaListagem) {
                PubSub.publish('atualiza-lista-livros',novaListagem);
                this.setState({titulo:'',preco:'',autorId:''});
            }.bind(this),
            error: function (resposta) {
                if (resposta.status === 400) {
                    new TratadorErros().publicaErros(resposta.responseJSON);
                }
            },
            beforeSend: function () {
                PubSub.publish("limpa-erros",{});
            }
        })
    }

    render(){
        let autores = this.props.autores.map(function (autor) {
            return <option key={autor.id} value={autor.id}>{autor.nome}</option>;
        });
        return(
            <div className="pure-form pure-form-aligned">
                <form className="pure-form pure-form-aligned" onSubmit={this.enviaForm} method="post">
                    <InputCustomizado id="titulo" type="text" name="titulo" value={this.state.titulo} onChange={this.salvaAlteracao.bind(this,'titulo')} label="Titulo"/>
                    <InputCustomizado id="preco" type="decimal" name="preco" value={this.state.preco} onChange={this.salvaAlteracao.bind(this,'preco')} label="Preço"/>
                    <div className="pure-controls">
                        <select value={this.state.autorId} name="autorId" onChange={this.salvaAlteracao.bind(this,'autorId')}>
                            <option value="">Selecione</option>
                            {autores}
                        </select>
                    </div>
                    <div className="pure-control-group">
                        <label></label>
                        <button type="submit" className="pure-button pure-button-primary">Gravar</button>
                    </div>
                </form>
            </div>
        );
    }
}

class TabelaLivros extends Component{
    render(){
        return(
            <div>
                <table className="pure-table">
                    <thead>
                    <tr>
                        <th>Titulo</th>
                        <th>Autor</th>
                        <th>Preço</th>
                    </tr>
                    </thead>
                    <tbody>
                    {
                        this.props.lista.map(function (livro) {
                            return (
                                <tr key={livro.id}>
                                    <td>{livro.titulo}</td>
                                    <td>{livro.autor.nome}</td>
                                    <td>{livro.preco}</td>
                                </tr>
                            );
                        })
                    }
                    </tbody>
                </table>
            </div>
        );
    }
}

export default class LivroBox extends Component{

    constructor() {
        super();
        this.state = {lista: [], autores:[]};
    }

    componentDidMount(){
        $.ajax({
            url:"https://cdc-react.herokuapp.com/api/livros",
            dataType: 'json',
            success:function (resposta) {
                this.setState({lista:resposta});
            }.bind(this)
        });

        $.ajax({
            url:"https://cdc-react.herokuapp.com/api/autores",
            dataType: 'json',
            success:function (resposta) {
                this.setState({autores:resposta});
            }.bind(this)
        });

        PubSub.subscribe('atualiza-lista-livros',function (topico, novaLista) {
            this.setState({lista:novaLista});
        }.bind(this));
    }

    render(){
        return(
            <div>
                <div className="header">
                    <h1>Cadastro de autores</h1>
                </div>
                <div className="content" id="content">
                    <FormularioLivro autores={this.state.autores}/>
                    <TabelaLivros lista={this.state.lista}/>
                </div>
            </div>
        );
    }
}